# üîß Workflow Configuration
# This file contains shared configuration for all workflows

# Global Environment Variables
env:
  # Python Configuration
  PYTHON_VERSION: '3.9'
  PYTHON_CACHE_KEY: 'v2'
  
  # Workflow Timeouts (minutes)
  DEFAULT_TIMEOUT: 30
  MANUAL_TIMEOUT: 45
  PR_VALIDATION_TIMEOUT: 20
  STATUS_TIMEOUT: 10
  
  # Cache Configuration
  CACHE_PREFIX: 'v2'
  CACHE_PATHS: |
    ~/.cache/pip
    ~/.cache/huggingface
    venv/
  
  # Artifact Retention (days)
  BACKUP_RETENTION: 30
  REPORT_RETENTION: 7
  LOG_RETENTION: 14
  
  # Repository Limits
  DEFAULT_MIN_STARS: 10
  DEFAULT_MAX_REPOS: 1000
  ABSOLUTE_MAX_REPOS: 10000
  
  # Analysis Configuration
  DEFAULT_ANALYSIS_MODE: 'fast'
  EMBEDDING_MODEL_SIZE: '500MB'
  
  # Notification Settings
  CREATE_ISSUES_ON_FAILURE: true
  NOTIFY_ON_SUCCESS: false
  CLOSE_OLD_ISSUES: true
  
  # Security Settings
  VALIDATE_EXTERNAL_PRS: true
  AUTO_MERGE_DEPENDABOT: true
  REQUIRE_PR_APPROVAL: true

# Shared Permissions Template
permissions: &default-permissions
  contents: write
  actions: read
  issues: write
  pull-requests: write
  checks: write

# Shared Steps Templates
steps:
  # Standard checkout step
  checkout: &checkout-step
    name: üèÅ Checkout Repository
    uses: actions/checkout@v4
    with:
      token: ${{ secrets.GITHUB_TOKEN }}
      fetch-depth: 0
  
  # Python setup with caching
  python-setup: &python-setup
    name: üêç Setup Python
    uses: actions/setup-python@v4
    with:
      python-version: ${{ env.PYTHON_VERSION }}
      cache: 'pip'
  
  # Dependency installation
  install-deps: &install-deps
    name: üì¶ Install Dependencies
    run: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
  
  # Git configuration for commits
  git-config: &git-config
    name: ‚öôÔ∏è Configure Git
    run: |
      git config user.name "github-actions[bot]"
      git config user.email "github-actions[bot]@users.noreply.github.com"

# Workflow-specific configurations
workflows:
  update-repository:
    schedule: '0 2 * * *'  # 2 AM UTC daily
    timeout: 30
    cache_strategy: 'aggressive'
    notification_on_failure: true
    
  validate-pr:
    timeout: 20
    test_matrix:
      - syntax
      - functionality 
      - performance
    security_checks: true
    auto_merge_dependabot: true
    
  manual-update:
    timeout: 45
    backup_enabled: true
    notification_options: true
    advanced_parameters: true
    
  status-badges:
    schedule: '0 3 * * *'  # 3 AM UTC daily (after main update)
    timeout: 10
    auto_update_readme: true
    generate_reports: true

# Security Configuration
security:
  external_pr_validation: true
  dependabot_auto_merge: true
  token_permissions: 'minimal'
  artifact_encryption: false
  secret_scanning: true
  
# Performance Configuration  
performance:
  parallel_jobs: true
  cache_dependencies: true
  optimize_checkout: true
  artifact_compression: true
  log_level: 'info'

# Error Handling
error_handling:
  retry_attempts: 3
  retry_delay: 5  # seconds
  create_issues: true
  close_resolved_issues: true
  notification_threshold: 'failure'

# Monitoring & Metrics
monitoring:
  track_execution_time: true
  monitor_resource_usage: true
  generate_summaries: true
  export_metrics: true
  
# Data Management
data:
  backup_before_update: true
  compression_enabled: true
  retention_policy:
    raw_data: 90        # days
    processed_data: 365 # days
    backups: 30         # days
    
# API Configuration
api:
  github_token: true
  rate_limit_handling: true
  pagination_support: true
  error_recovery: true

# Customization Guidelines
customization:
  # How to modify schedules:
  # 1. Update the cron expressions in workflow files
  # 2. Ensure proper spacing between workflows
  # 3. Consider timezone implications
  
  # How to adjust timeouts:
  # 1. Modify timeout values in individual workflows
  # 2. Consider job complexity and resource requirements
  # 3. Test with manual runs first
  
  # How to modify analysis parameters:
  # 1. Update default values in manual-update.yml
  # 2. Adjust validation in validate-inputs job
  # 3. Update documentation accordingly
  
  # How to customize notifications:
  # 1. Modify issue templates in workflow files
  # 2. Adjust notification conditions
  # 3. Update label configurations

# Environment-specific Overrides
environments:
  development:
    analysis_mode: 'test'
    max_repos: 50
    create_backup: false
    
  staging:
    analysis_mode: 'fast'
    max_repos: 500
    create_backup: true
    
  production:
    analysis_mode: 'fast'  # Switch to 'full' if needed
    max_repos: 1000
    create_backup: true
    notifications: true

# Maintenance Schedule
maintenance:
  dependency_updates: 'weekly'
  workflow_review: 'monthly'
  performance_analysis: 'quarterly'
  security_audit: 'annually'

---

# üìù Usage Notes

# This configuration file serves as:
# 1. Documentation of workflow settings
# 2. Reference for customization
# 3. Template for new workflows
# 4. Maintenance guideline

# To apply changes:
# 1. Modify relevant workflow files
# 2. Test with manual triggers  
# 3. Update this documentation
# 4. Create PR for validation

# For environment-specific deployments:
# 1. Copy workflows to separate files
# 2. Modify parameters per environment
# 3. Use different schedules/triggers
# 4. Maintain separate branches if needed